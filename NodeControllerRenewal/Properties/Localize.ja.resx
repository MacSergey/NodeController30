<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Mod_BackwardСompatibilityMessage" xml:space="preserve">
    <value>オリジナルのNode Controllerから、設定がインポートされました。
部分的に設定の互換性がありません、手動で調整や再適用が必要な場合があります。</value>
  </data>
  <data name="Mod_BackwardСompatibilityWarning" xml:space="preserve">
    <value>警告: インポート後にマップの保存を行うと、オリジナルのNode Controllerは使用できなくなります。</value>
  </data>
  <data name="Mod_Description" xml:space="preserve">
    <value>交差点やノードの種類・形状を、調整や変更ができます。</value>
  </data>
  
  
  
  
  
  
  
  
  
  
  <data name="NodeStyle_Bend" xml:space="preserve">
    <value>ベンド</value>
  </data>
  <data name="NodeStyle_Crossing" xml:space="preserve">
    <value>横断歩道</value>
  </data>
  <data name="NodeStyle_Custom" xml:space="preserve">
    <value>カスタム</value>
  </data>
  <data name="NodeStyle_End" xml:space="preserve">
    <value>終端</value>
  </data>
  <data name="NodeStyle_Middle" xml:space="preserve">
    <value>ミドル</value>
  </data>
  <data name="NodeStyle_Stretch" xml:space="preserve">
    <value>ストレッチ</value>
  </data>
  <data name="NodeStyle_UTurn" xml:space="preserve">
    <value>Uターン</value>
  </data>
  <data name="Options_All" xml:space="preserve">
    <value>すべて</value>
  </data>
  <data name="Option_CalculateShiftByIntersections" xml:space="preserve">
    <value>交差点間でシフト値を、まとめてスムージング</value>
  </data>
  <data name="Option_CalculateShiftByNearby" xml:space="preserve">
    <value>隣接するノードで、シフトをスムージング</value>
  </data>
  <data name="Option_CalculateTwistByIntersections" xml:space="preserve">
    <value>交差点間でツイスト値を、まとめてスムージング</value>
  </data>
  <data name="Option_CalculateTwistByNearby" xml:space="preserve">
    <value>隣接するノードで、ツイストのスムージング</value>
  </data>
  <data name="Option_KeepDefault" xml:space="preserve">
    <value>オフセットをリセット</value>
  </data>
  <data name="Option_MainSlopeDirection" xml:space="preserve">
    <value>スロープ化の選択方法</value>
  </data>
  <data name="Option_MainSlopeDirectionAuto" xml:space="preserve">
    <value>自動</value>
  </data>
  <data name="Option_MainSlopeDirectionManually" xml:space="preserve">
    <value>任意</value>
  </data>
  <data name="Option_MakeStraightEnds" xml:space="preserve">
    <value>セグメントの端を直線化</value>
  </data>
  <data name="Option_Marking" xml:space="preserve">
    <value>横断歩道の表示</value>
  </data>
  <data name="Option_Offset" xml:space="preserve">
    <value>オフセット(長さ)</value>
  </data>
  <data name="Option_OffsetFormat" xml:space="preserve">
    <value>{0}m</value>
  </data>
  <data name="Option_ResetToDefault" xml:space="preserve">
    <value>デフォルトに戻す</value>
  </data>
  <data name="Option_Rotate" xml:space="preserve">
    <value>回転(角度)</value>
  </data>
  <data name="Option_RotateFormat" xml:space="preserve">
    <value>{0}°</value>
  </data>
  <data name="Option_SetShiftBetweenIntersections" xml:space="preserve">
    <value>交差点間では、シフト値を一括適用</value>
  </data>
  <data name="Option_SetTwistBetweenIntersections" xml:space="preserve">
    <value>交差点間では、ツイスト値を一括適用</value>
  </data>
  <data name="Option_Shift" xml:space="preserve">
    <value>シフト(左右の移動)</value>
  </data>
  <data name="Option_ShiftFormat" xml:space="preserve">
    <value>{0}m</value>
  </data>
  <data name="Option_Slope" xml:space="preserve">
    <value>スロープ(勾配)</value>
  </data>
  <data name="Option_SlopeFormat" xml:space="preserve">
    <value>{0}°</value>
  </data>
  <data name="Option_Stretch" xml:space="preserve">
    <value>ストレッチ(太さ)</value>
  </data>
  <data name="Option_StretchFormat" xml:space="preserve">
    <value>{0}%</value>
  </data>
  <data name="Option_Style" xml:space="preserve">
    <value>スタイル</value>
  </data>
  <data name="Option_StyleFlat" xml:space="preserve">
    <value>フラット</value>
  </data>
  <data name="Option_StyleSlope" xml:space="preserve">
    <value>スロープ</value>
  </data>
  <data name="Option_Twist" xml:space="preserve">
    <value>ツイスト(バンク)</value>
  </data>
  <data name="Option_TwistFormat" xml:space="preserve">
    <value>{0}°</value>
  </data>
  <data name="Option_Type" xml:space="preserve">
    <value>ノードの設定</value>
  </data>
  <data name="Panel_NodeId" xml:space="preserve">
    <value>ノード #{0} を調整中</value>
  </data>
  <data name="Settings_InsertNode" xml:space="preserve">
    <value>ノードの追加方法</value>
  </data>
  <data name="Settings_InsertNodeDisabled" xml:space="preserve">
    <value>無効化</value>
  </data>
  <data name="Settings_InsertNodeEnabled" xml:space="preserve">
    <value>セグメント上のクリックで即追加</value>
  </data>
  <data name="Settings_InsertNodeWithModifier" xml:space="preserve">
    <value>セグメント上で {0} をクリック</value>
  </data>
  <data name="Settings_NodeIsSlopedByDefault" xml:space="preserve">
    <value>デフォルトでノードを全てスロープ化</value>
  </data>
  <data name="Settings_RenderNearNode" xml:space="preserve">
    <value>選択中は近くにあるノードをハイライト</value>
  </data>
  <data name="Settings_SelectMiddleNodes" xml:space="preserve">
    <value>中間部分にあるノードも選択</value>
  </data>
  <data name="Settings_SelectMiddleNodesDiscription" xml:space="preserve">
    <value>このオプションを無効にすると、中間部分にあるノードは選択されません</value>
  </data>
  <data name="Settings_ShortcutEnterUnderground" xml:space="preserve">
    <value>地下表示に移行</value>
  </data>
  <data name="Settings_ShortcutExitUnderground" xml:space="preserve">
    <value>地下表示を終了</value>
  </data>
  <data name="Settings_ToggleUnderground" xml:space="preserve">
    <value>地下表示の切り替え方法</value>
  </data>
  <data name="Settings_ToggleUndergroundButtons" xml:space="preserve">
    <value>{0} で移行 / {1} は終了</value>
  </data>
  <data name="Settings_ToggleUndergroundHold" xml:space="preserve">
    <value>{0} を保持</value>
  </data>
  <data name="Setting_ShortcutCalculateShiftByIntersections" xml:space="preserve">
    <value>交差点間でシフト値を、まとめてスムージング</value>
  </data>
  <data name="Setting_ShortcutCalculateShiftByNearby" xml:space="preserve">
    <value>隣接するノードで、シフトをスムージング</value>
  </data>
  <data name="Setting_ShortcutCalculateTwistByIntersections" xml:space="preserve">
    <value>交差点間でツイスト値を、まとめてスムージング</value>
  </data>
  <data name="Setting_ShortcutCalculateTwistByNearby" xml:space="preserve">
    <value>隣接するノードで、ツイストのスムージング</value>
  </data>
  <data name="Setting_ShortcutChangeMainRoadMode" xml:space="preserve">
    <value>スロープ化の選択方法</value>
  </data>
  <data name="Setting_ShortcutChangeNodeStyle" xml:space="preserve">
    <value>スタイルの変更</value>
  </data>
  <data name="Setting_ShortcutKeepDefault" xml:space="preserve">
    <value>オフセットをリセット</value>
  </data>
  <data name="Setting_ShortcutMakeStraightEnds" xml:space="preserve">
    <value>セグメントの端を直線化</value>
  </data>
  <data name="Setting_ShortcutResetToDefault" xml:space="preserve">
    <value>デフォルトに戻す</value>
  </data>
  <data name="Setting_ShortcutSetShiftBetweenIntersections" xml:space="preserve">
    <value>交差点間では、シフト値を一括適用</value>
  </data>
  <data name="Setting_ShortcutSetTwistBetweenIntersections" xml:space="preserve">
    <value>交差点間では、ツイスト値を一括適用</value>
  </data>
  <data name="Tool_EnterUnderground" xml:space="preserve">
    <value>{0} を押して
地下表示に移行</value>
  </data>
  <data name="Tool_ExitUnderground" xml:space="preserve">
    <value>{0} を押して
地下表示を終了</value>
  </data>
  <data name="Tool_InfoAlignMode" xml:space="preserve">
    <value>{0} で、シフトして自動的に整列</value>
  </data>
  <data name="Tool_InfoApplyAlign" xml:space="preserve">
    <value>クリックしてこのコーナーへ自動整列</value>
  </data>
  <data name="Tool_InfoChangeMainMode" xml:space="preserve">
    <value>{0} で、スロープ化する接続方向を変更</value>
  </data>
  <data name="Tool_InfoClickNode" xml:space="preserve">
    <value>ノード #{0}
クリックして形状を調整</value>
  </data>
  <data name="Tool_InfoClickToSelectFirstAlign" xml:space="preserve">
    <value>クリックしてこのコーナーを始点に選択</value>
  </data>
  <data name="Tool_InfoDragCenter" xml:space="preserve">
    <value>ドラッグしてオフセットを変更</value>
  </data>
  <data name="Tool_InfoDragCircle" xml:space="preserve">
    <value>ドラッグして回転(角度)を変更</value>
  </data>
  <data name="Tool_InfoDragCorner" xml:space="preserve">
    <value>ドラッグしてコーナーオフセットを変更</value>
  </data>
  <data name="Tool_InfoDragMainSlopeDirectionEnd" xml:space="preserve">
    <value>終端をドラッグして、スロープ化したい接続先を変更</value>
  </data>
  <data name="Tool_InfoDropMainSlopeDirectionEnd" xml:space="preserve">
    <value>終端をドロップして、この接続方向でスロープ化する</value>
  </data>
  <data name="Tool_InfoInsertCrossingNode" xml:space="preserve">
    <value>クリックして横断歩道を追加</value>
  </data>
  <data name="Tool_InfoInsertCrossingNodeWithModifier" xml:space="preserve">
    <value>{0} をクリックして横断歩道を追加</value>
  </data>
  <data name="Tool_InfoInsertNode" xml:space="preserve">
    <value>クリックしてノードを追加</value>
  </data>
  <data name="Tool_InfoInsertNodeWithModifier" xml:space="preserve">
    <value>{0} をクリックしてノードを追加</value>
  </data>
  <data name="Tool_InfoSelectAlignRelative" xml:space="preserve">
    <value>コーナーの終点を選択して自動整列</value>
  </data>
  <data name="Tool_InfoSelectMainSlopeDirection" xml:space="preserve">
    <value>スロープを変更したい、セグメントの終端を選択</value>
  </data>
  <data name="Tool_InfoSelectNewMainSlopeDirectionEnd" xml:space="preserve">
    <value>終端をD&amp;Dして、他のセグメントへ接続先を変更</value>
  </data>
  <data name="Tool_InfoSelectNode" xml:space="preserve">
    <value>調整したいノード(交差点)を選択してください</value>
  </data>
  <data name="Tool_InfoSelectToAlign" xml:space="preserve">
    <value>自動整列したいコーナーの始点を選択</value>
  </data>
  <data name="Tool_InfoTooCloseNode" xml:space="preserve">
    <value>ノードが追加できません
他のノードと近すぎます</value>
  </data>
  <data name="Tool_InfoUnderground" xml:space="preserve">
    <value>{0} で、地下表示に切り替え</value>
  </data>
</root>